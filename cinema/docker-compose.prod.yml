services:
  db:
    image: postgres:16-alpine
    container_name: cinema-db
    env_file:
      - .env
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U ${POSTGRES_USER} -d ${POSTGRES_DB}"]
      interval: 5s
      timeout: 3s
      retries: 5
      start_period: 5s
    volumes:
      - cinema-db-data:/var/lib/postgresql/data
      - ./db/migrations:/docker-entrypoint-initdb.d:ro
    restart: unless-stopped
    networks:
      - cinema-net

  app:
    image: ${APP_IMAGE}
    build:
      context: .
      dockerfile: Dockerfile
    container_name: cinema-app
    depends_on:
      db:
        condition: service_healthy
    env_file:
      - .env
    environment:
      APP_ENV: production
    ports:
      - "${PORT:-8080}:8080"
    restart: unless-stopped
    networks:
      - cinema-net

  nginx:
    image: nginx:alpine
    container_name: cinema-nginx
    depends_on:
      app:
        condition: service_started
    env_file:
      - .env
    environment:
      APP_ENV: production
    command: >
      sh -c "
      echo \"window.APP_CONFIG={API_BASE_URL:'${FRONTEND_API_BASE_URL}'}\" >/usr/share/nginx/html/config.js;
      exec nginx -g 'daemon off;'
      "
    ports:
      - "80:80"
    volumes:
      - ./index.html:/usr/share/nginx/html/index.html:ro
    healthcheck:
      test: ["CMD-SHELL", "wget -qO- http://localhost/ >/dev/null 2>&1 || exit 1"]
      interval: 5s
      timeout: 3s
      retries: 5
      start_period: 5s
    restart: unless-stopped
    networks:
      - cinema-net

volumes:
  cinema-db-data:

networks:
  cinema-net:
    driver: bridge
