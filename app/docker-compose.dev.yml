services:
  db:
    image: postgres:16-alpine
    container_name: cinema-db-dev
    env_file:
      - .env
    ports:
      - "${POSTGRES_PORT:-5432}:5432"
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U ${POSTGRES_USER} -d ${POSTGRES_DB}"]
      interval: 5s
      timeout: 3s
      retries: 5
      start_period: 5s
    volumes:
      - ./internal/db/migrations:/docker-entrypoint-initdb.d:ro
    networks:
      - cinema-dev-net

  app:
    image: ${APP_IMAGE:-cinema-app:dev}
    build:
      context: ..
      dockerfile: app/Dockerfile
    container_name: cinema-app-dev
    depends_on:
      db:
        condition: service_healthy
    env_file:
      - .env
    environment:
      APP_ENV: development
    ports:
      - "8080:8080"
    networks:
      - cinema-dev-net

  nginx:
    image: nginx:alpine
    container_name: cinema-nginx-dev
    depends_on:
      app:
        condition: service_started
    env_file:
      - .env
    environment:
      APP_ENV: development
    command: >
      sh -c "
      echo \"window.APP_CONFIG={API_BASE_URL:'${FRONTEND_API_BASE_URL}'}\" >/usr/share/nginx/html/config.js;
      exec nginx -g 'daemon off;'
      "
    ports:
      - "80:80"
    volumes:
      - ./index.html:/usr/share/nginx/html/index.html:ro
    healthcheck:
      test: ["CMD-SHELL", "wget -qO- http://localhost/ >/dev/null 2>&1 || exit 1"]
      interval: 5s
      timeout: 3s
      retries: 5
      start_period: 5s
    networks:
      - cinema-dev-net

networks:
  cinema-dev-net:
    driver: bridge
