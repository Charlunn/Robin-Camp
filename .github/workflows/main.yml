name: CI

on:
  push:
  pull_request:

env:
  IMAGE_NAME: cinema-app

jobs:
  build:
    runs-on: ubuntu-latest
    env:
      IMAGE_TAG: ${{ github.sha }}
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Set up Go
        uses: actions/setup-go@v5
        with:
          go-version: '1.23'
          cache: true

      - name: Go vet
        run: go vet ./...
        working-directory: cinema

      - name: Run unit tests
        run: go test ./...
        working-directory: cinema

      - name: Build Docker image
        run: docker build -t "$IMAGE_NAME:$IMAGE_TAG" -f cinema/Dockerfile cinema

      - name: Save Docker image artifact
        shell: bash
        run: |
          docker save "$IMAGE_NAME:$IMAGE_TAG" | gzip > image.tar.gz

      - name: Upload image artifact
        uses: actions/upload-artifact@v4
        with:
          name: cinema-image
          path: image.tar.gz
          retention-days: 1

  deploy:
    runs-on: ubuntu-latest
    needs: build
    env:
      IMAGE_TAG: ${{ github.sha }}
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Download image artifact
        uses: actions/download-artifact@v4
        with:
          name: cinema-image
          path: artifacts

      - name: Load Docker image
        shell: bash
        run: |
          gunzip -c artifacts/image.tar.gz | docker load
          echo "APP_IMAGE=${IMAGE_NAME}:${IMAGE_TAG}" >> "$GITHUB_ENV"

      - name: Install dependencies
        shell: bash
        run: |
          sudo apt-get update
          sudo apt-get install -y jq postgresql-client

      - name: Prepare environment files
        working-directory: cinema
        shell: bash
        run: |
          sed -i 's/\r$//' .env
          chmod +x e2e-test.sh

      - name: Start application stack
        working-directory: cinema
        shell: bash
        run: docker compose --project-name cinema-ci up -d --no-build

      - name: Check frontend homepage is served by nginx
        working-directory: cinema
        shell: bash
        run: |
          set -euo pipefail
          # Retry for up to ~30s until nginx is healthy and serving index.html
          for i in {1..10}; do
            if curl -sS http://localhost:80/ | grep -q '电影探索者'; then
              echo "Frontend is up."
              exit 0
            fi
            echo "Waiting for frontend (attempt $i)..."
            sleep 3
          done
          echo "Frontend check failed: index.html not served on http://localhost:80/"
          exit 1

      - name: Run E2E tests
        working-directory: cinema
        shell: bash
        run: ./e2e-test.sh

      - name: Show logs on failure
        if: failure()
        working-directory: cinema
        shell: bash
        run: docker compose --project-name cinema-ci logs

      - name: Tear down stack
        if: always()
        working-directory: cinema
        shell: bash
        run: docker compose --project-name cinema-ci down -v

